version: '3.7'
services:
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
  prometheus:
    image: prom/prometheus:v2.21.0
    ports:
      - 9000:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yaml
  db:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    command: ["postgres", "-c", "log_statement=all"]
  scrape:
    build:
      context: .
      dockerfile: ./docker/scrape/Dockerfile
    environment:
      POSTGRES_DSN: host=db user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} dbname=${POSTGRES_DB} port=5432 sslmode=disable TimeZone=Australia/Sydney
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6831
    restart: unless-stopped
  inventory:
    build:
      context: .
      dockerfile: ./docker/inventory/Dockerfile
    ports:
      - "8080:8080"
    environment:
      POSTGRES_DSN: host=db user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} dbname=${POSTGRES_DB} port=5432 sslmode=disable TimeZone=Australia/Sydney
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6831
    restart: unless-stopped
volumes:
  prometheus-data:
  db-data:
